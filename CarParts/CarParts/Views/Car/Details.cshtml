@using CarParts.Web.Extensions
@using CarParts.Web.ViewModels.Review
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using CarParts.Services.Data
@using CarParts.Services.Data.Interfaces
@model CarParts.Web.ViewModels.Car.DetailsCarViewModel
@{
    ViewBag.Title = "Car Details";
}

@inject IUserService UserService

@{
    var errorMessage = TempData["ErrorMessage"] as string;
    var successMessage = TempData["SuccessMessage"] as string;

    if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">@successMessage</div>
    }
}


@*SweetAlert CDN*@
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.17/dist/sweetalert2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.17/dist/sweetalert2.min.js"></script>


<style>
    .btn-purple {
        background-color: purple;
        color: white;
        /* Add any additional styling as needed */
    }

    .btn-lightgreen {
        background-color: lightgreen;
        color: white;
        /* Add any additional styling as needed */
    }
</style>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="card w-100">
        <div class="card-body">

            <img src="@Model.ImageUrl" alt="Car Image" class="card-img-top img-fluid" style="max-width: 300px;">

            <h4 class="card-title">@Model.Make @Model.Model</h4>


            <p class="mb-0"><span class="fw-bold">Category: </span>@Model.Category</p>
            <p class="mb-0"><span class="fw-bold">Year: </span>@Model.Year</p>
            <p class="mb-0"><span class="fw-bold">Fuel Type: </span>@Model.FuelType</p>
            <p class="mb-0"><span class="fw-bold">Transmission: </span>@Model.Transmission</p>
            <p class="mb-0"><span class="fw-bold">Price: </span>@Model.Price</p>

            <div id="moreDetails" style="display: none;">
                <p class="mb-0"><span class="fw-bold">Description: </span>@Model.Description</p>
                <p class="mb-0"><span class="fw-bold">Color: </span>@Model.Color</p>
                <p class="mb-0"><span class="fw-bold">Engine Size: </span>@Model.EngineSize</p>
                <p class="mb-0"><span class="fw-bold">Weight: </span>@Model.Weight</p>
                <p class="mb-0"><span class="fw-bold">Top Speed: </span>@Model.TopSpeed</p>
                <p class="mb-0"><span class="fw-bold">Acceleration: </span>@Model.Acceleration</p>
                <p class="mb-0"><span class="fw-bold">Horsepower: </span>@Model.Horsepower</p>
                <p class="mb-0"><span class="fw-bold">Torque: </span>@Model.Torque</p>
                <p class="mb-0"><span class="fw-bold">Fuel Consumption: </span>@Model.FuelConsumption</p>
                <p></p>
                <p class="mb-0"><span class="fw-bold">Renter Email: </span>@Model.RenterEmail</p>
                <p class="mb-0"><span class="fw-bold">Rent Price: </span>@Model.RentPrice eur (per day)</p>
            </div>

            <button id="moreDetailsBtn" class="btn btn-link text-info btn-lg">More Details</button>
            <button id="lessDetailsBtn" class="btn btn-link text-info btn-lg" style="display: none;">Less Details</button>
        </div>
        
        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Dealer Info</h5>
                @if(Model.DetailsDealerViewModel.FullName != null)
                {
                    <p class="card-text">Full Name: @Model.DetailsDealerViewModel.FullName</p>
                }
                <p class="card-text">Email: @Model.DetailsDealerViewModel.Email</p>
                <p class="card-text">Address: @Model.DetailsDealerViewModel.Address</p>
            </div>
        </div>
        
    @if (User.Identity!.IsAuthenticated && (!await UserService.IsUserDealer(User.GetId())))
    {
        <div class="card" style="width: 18rem;">
            <div class="card-body">
                
                
                    @{ await Html.RenderPartialAsync("ReviewFormPartial", new ReviewViewModel()
                       {
                           CarId = Model.CarId
                       });
                    }
               

            </div>
        </div>
    }
        
        <div>
            
            <h2>Reviews: </h2>
            <hr />
            @if (Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <p class="mb-0"><span class="fw-bold">Username: </span>@review.Username</p>
                            <p class="mb-0"><span class="fw-bold">Review: </span>@review.Content</p>
                            <p class="mb-0"><span class="fw-bold">Rating: </span>@review.Rating</p>
                            <p class="mb-0"><span class="fw-bold">Date: </span>@review.DatePosted.ToString("dd/MM/yyyy")</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No reviews available.</p>
            }

        </div>
        
        
    </div>
    


    @if (User.Identity.Name == @Model.Owner || User.IsAdmin())
    {
        <a asp-controller="Car" asp-action="Edit" asp-route-id="@Model.CarId" class="btn btn-warning btn-block">
            Edit
        </a>

        <a href="#" class="btn btn-danger btn-block delete-car" data-id="@Model.CarId">
            Delete
        </a>
    }
    
    @if (User.IsAdmin())
    {
        <a asp-area="Admin" asp-controller="User" asp-action="DeleteAllReviewsForCar" asp-route-id="@Model.CarId" class="btn btn-danger btn-block">
            Delete all reviews for this car
        </a>
    }

    <a asp-controller="Car" asp-action="AddToFavoriteCars" asp-route-id="@Model.CarId" class="btn btn-purple btn-block">
        Add to favorite cars
    </a>

    <a asp-controller="Car" asp-action="All" class="btn btn-success mb-2 w-100 p-3 fw-bold">
        Back to All Cars
    </a>

</div>

@section Scripts {
    <script>
        document.getElementById("moreDetailsBtn").addEventListener("click", function () {
            document.getElementById("moreDetails").style.display = "block";
            document.getElementById("moreDetailsBtn").style.display = "none";
            document.getElementById("lessDetailsBtn").style.display = "inline";
        });

        document.getElementById("lessDetailsBtn").addEventListener("click", function () {
            document.getElementById("moreDetails").style.display = "none";
            document.getElementById("moreDetailsBtn").style.display = "inline";
            document.getElementById("lessDetailsBtn").style.display = "none";
        });
    </script>


    <script>
        // Handle the click event for the delete buttons
        $('.delete-car').on('click', function (e) {
            e.preventDefault();
            const carId = $(this).data('id');

            // Show SweetAlert confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to delete this car. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If user confirms, redirect to the "Delete" action with carId as a parameter
                    window.location.href = `/Car/Delete/${carId}`;
                }
            });
        });
    </script>

    

    <partial name="_ValidationScriptsPartial"/>
}


